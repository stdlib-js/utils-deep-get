{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/dget.js","../lib/deep_get.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert-is-object-like' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @private\n* @param {ObjectLike} obj - input object\n* @param {Array} props - list of properties defining a key path\n* @returns {*} nested property value\n*/\nfunction deepGet( obj, props ) {\n\tvar len = props.length;\n\tvar v = obj;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif (\n\t\t\tisObjectLike( v ) &&\n\t\t\thasOwnProp( v, props[ i ] )\n\t\t) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\treturn v;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( '@stdlib/assert-is-object-like' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isArray = require( '@stdlib/assert-is-array' );\nvar format = require( '@stdlib/string-format' );\nvar copy = require( '@stdlib/utils-copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar dget = require( './dget.js' );\n\n\n// MAIN //\n\n/**\n* Returns a nested property value.\n*\n* @param {ObjectLike} obj - input object\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {*} nested property value\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* @example\n* var arr = [\n*     { 'a': [ {'x': 5} ] },\n*     { 'a': [ {'x': 10} ] }\n* ];\n* var val = deepGet( arr, '1.a.0.x' );\n* // returns 10\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, ['a','b','c'] );\n* // returns 'd'\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var val = deepGet( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns 'd'\n*/\nfunction deepGet( obj, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tif ( !isObjectLike( obj ) ) {\n\t\treturn;\n\t}\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn dget( obj, props );\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepGet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isArray = require( '@stdlib/assert-is-array' );\nvar isObjectLike = require( '@stdlib/assert-is-object-like' );\nvar format = require( '@stdlib/string-format' );\nvar copy = require( '@stdlib/utils-copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar dget = require( './dget.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for retrieving a nested property value.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} deep get function\n*\n* @example\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepGet;\n\n\t/**\n\t* Returns a nested property value.\n\t*\n\t* @private\n\t* @param {ObjectLike} obj - input object\n\t* @returns {*} nested property value\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var val = deepGet( obj );\n\t*/\n\tfunction deepGet( obj ) {\n\t\tif ( isObjectLike( obj ) ) {\n\t\t\treturn dget( obj, props );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Get a nested property value.\n*\n* @module @stdlib/utils-deep-get\n*\n* @example\n* var deepGet = require( '@stdlib/utils-deep-get' );\n*\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* var val = deepGet( obj, 'a.b.c' );\n* // returns 'd'\n*\n* var dget = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* obj = { 'a': { 'b': { 'c': 'd' } } };\n*\n* val = dget( obj );\n* // returns 'd'\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar deepGet = require( './deep_get.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( deepGet, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = deepGet;\n"],"names":["isString","require$$0","isPrimitive","isObject","require$$1","hasOwnProp","require$$2","format","require$$3","validate_1","opts","options","sep","TypeError","isObjectLike","dget","obj","props","i","len","length","v","isArray","copy","require$$4","validate","require$$5","defaults","require$$6","require$$7","deep_get","path","isStr","err","arguments","split","factory_1","deepGet","factory","lib"],"mappings":";;qsBAsBA,IAAIA,EAAWC,EAAsCC,YACjDC,EAAWC,EACXC,EAAaC,EACbC,EAASC,EAwCb,IAAAC,EAhBA,SAAmBC,EAAMC,GACxB,OAAMR,EAAUQ,GAGXN,EAAYM,EAAS,SACzBD,EAAKE,IAAMD,EAAQC,KACbZ,EAAUU,EAAKE,MACb,IAAIC,UAAWN,EAAQ,8DAA+D,MAAOG,EAAKE,MAGpG,KARC,IAAIC,UAAWN,EAAQ,qEAAsEI,iBC7BlGG,EAAeb,EACfI,EAAaD,EAiCjB,IAAAW,EApBA,SAAkBC,EAAKC,GACtB,IAEIC,EAFAC,EAAMF,EAAMG,OACZC,EAAIL,EAER,IAAME,EAAI,EAAGA,EAAIC,EAAKD,IAAM,CAC3B,IACCJ,EAAcO,KACdhB,EAAYgB,EAAGJ,EAAOC,IAItB,OAFAG,EAAIA,EAAGJ,EAAOC,IAKhB,OAAOG,GC5BJP,EAAeb,EACfD,EAAWI,EAAsCF,YACjDoB,EAAUhB,EACVC,EAASC,EACTe,EAAOC,EACPC,EAAWC,EACXC,EAAWC,EACXb,EAAOc,EAwEX,IAAAC,EA9BA,SAAkBd,EAAKe,EAAMpB,GAC5B,IAAIqB,EACAf,EACAP,EACAuB,EACJ,GAAMnB,EAAcE,GAApB,CAIA,KADAgB,EAAQhC,EAAU+B,MACFT,EAASS,GACxB,MAAM,IAAIlB,UAAWN,EAAQ,2EAA4EwB,IAG1G,GADArB,EAAOa,EAAMI,GACRO,UAAUd,OAAS,IACvBa,EAAMR,EAAUf,EAAMC,IAErB,MAAMsB,EAQR,OAJChB,EADIe,EACID,EAAKI,MAAOzB,EAAKE,KAEjBmB,EAEFhB,EAAMC,EAAKC,KCzEfjB,EAAWC,EAAsCC,YACjDoB,EAAUlB,EACVU,EAAeR,EACfC,EAASC,EACTe,EAAOC,EACPC,EAAWC,EACXC,EAAWC,EACXb,EAAOc,EAiEX,IAAAO,EA5CA,SAAkBL,EAAMpB,GACvB,IAAIqB,EACAf,EACAP,EACAuB,EAEJ,KADAD,EAAQhC,EAAU+B,MACFT,EAASS,GACxB,MAAM,IAAIlB,UAAWN,EAAQ,2EAA4EwB,IAG1G,GADArB,EAAOa,EAAMI,GACRO,UAAUd,OAAS,IACvBa,EAAMR,EAAUf,EAAMC,IAErB,MAAMsB,EAQR,OAJChB,EADIe,EACID,EAAKI,MAAOzB,EAAKE,KAEjBmB,EAEFM,EAaP,SAASA,EAASrB,GACjB,GAAKF,EAAcE,GAClB,OAAOD,EAAMC,EAAKC,KCxCrBoB,EAAAjC,EACAkC,EAAAhC,EAFAL,EAOAoC,EAAA,UAAAC,GAKA,IAAAC,EAAAF"}